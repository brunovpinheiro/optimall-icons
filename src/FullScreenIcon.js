function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import React, { forwardRef } from 'react';
export const FullScreenIcon = /*#__PURE__*/forwardRef(({
  className,
  style,
  ariaLabel,
  ...props
}, ref) => /*#__PURE__*/React.createElement("svg", _extends({
  ref: ref,
  className: className,
  "aria-label": ariaLabel || "full, screen",
  style: style,
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, props), /*#__PURE__*/React.createElement("path", {
  d: "M2.09968 15.5C2.09968 15.0029 2.50301 14.5996 3.00007 14.5996C3.49712 14.5996 3.90046 15.0029 3.90046 15.5C3.90046 16.9605 3.90969 17.4916 4.03327 17.8994L4.09577 18.083C4.43225 18.9856 5.17188 19.6851 6.10065 19.9668C6.40661 20.0596 6.78135 20.0881 7.56647 20.0967L8.50007 20.0996L8.59186 20.1045C9.04581 20.1505 9.40046 20.5339 9.40046 21C9.40046 21.4661 9.04581 21.8495 8.59186 21.8955L8.50007 21.9004L7.58503 21.8984C6.74672 21.8908 6.12394 21.8549 5.57819 21.6895C4.1102 21.244 2.94103 20.1385 2.40925 18.7119L2.31061 18.4219C2.09003 17.6942 2.09968 16.8298 2.09968 15.5ZM20.0997 15.5C20.0997 15.0029 20.503 14.5996 21.0001 14.5996C21.4971 14.5996 21.9005 15.0029 21.9005 15.5C21.9005 16.664 21.9078 17.4714 21.7618 18.1426L21.6895 18.4219C21.2442 19.89 20.1387 21.059 18.712 21.5908L18.4219 21.6895C17.6943 21.91 16.8299 21.9004 15.5001 21.9004C15.003 21.9004 14.5997 21.4971 14.5997 21C14.5997 20.5029 15.003 20.0996 15.5001 20.0996C16.9605 20.0996 17.4917 20.0903 17.8995 19.9668L18.0831 19.9043C18.9857 19.5678 19.6851 18.8282 19.9669 17.8994L20.0079 17.7393C20.0925 17.3444 20.0997 16.7781 20.0997 15.5ZM2.09968 8.5C2.09968 7.16992 2.08985 6.30491 2.31061 5.57715L2.40925 5.28809C2.94104 3.86148 4.10923 2.75596 5.57721 2.31055L5.85749 2.23828C6.52871 2.09224 7.33619 2.09961 8.50007 2.09961C8.99712 2.09961 9.40046 2.50294 9.40046 3C9.40046 3.49706 8.99712 3.90039 8.50007 3.90039C7.22201 3.90039 6.65563 3.9075 6.26081 3.99219L6.10065 4.0332C5.17184 4.31496 4.43223 5.01439 4.09577 5.91699L4.03327 6.10059C3.9097 6.50836 3.90046 7.03957 3.90046 8.5C3.90046 8.99706 3.49712 9.40039 3.00007 9.40039C2.50301 9.40039 2.09968 8.99706 2.09968 8.5ZM20.0997 8.5C20.0997 7.03964 20.0904 6.50839 19.9669 6.10059L19.9044 5.91699C19.5903 5.07462 18.9255 4.40974 18.0831 4.0957L17.8995 4.0332C17.5936 3.94051 17.2184 3.91186 16.4337 3.90332L15.5001 3.90039L15.4083 3.89551C14.9543 3.84953 14.5997 3.46607 14.5997 3C14.5997 2.50294 15.003 2.09961 15.5001 2.09961L16.4151 2.10156C17.2534 2.10915 17.8762 2.1451 18.4219 2.31055L18.712 2.40918C20.0435 2.90553 21.0945 3.95654 21.5909 5.28809L21.6895 5.57715L21.7618 5.85742C21.9078 6.52863 21.9005 7.33609 21.9005 8.5C21.9005 8.99706 21.4971 9.40039 21.0001 9.40039C20.503 9.40039 20.0997 8.99706 20.0997 8.5Z",
  fill: "currentColor"
})));
export default FullScreenIcon;