function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import React, { forwardRef } from 'react';
export const ShoppingBag02Icon = /*#__PURE__*/forwardRef(({
  className,
  style,
  ariaLabel,
  ...props
}, ref) => /*#__PURE__*/React.createElement("svg", _extends({
  ref: ref,
  className: className,
  "aria-label": ariaLabel || "shopping, bag, 02",
  style: style,
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, props), /*#__PURE__*/React.createElement("path", {
  d: "M15.0813 10.1035C15.5761 10.149 15.941 10.5872 15.8958 11.082C15.7166 13.0289 13.9556 14.4004 11.9993 14.4004C10.1043 14.4003 8.39242 13.1138 8.12427 11.2637L8.10279 11.082L8.09888 10.9902C8.10328 10.5342 8.45339 10.1463 8.91724 10.1035C9.381 10.0611 9.79453 10.3788 9.88208 10.8262L9.89575 10.918L9.91919 11.0811C10.0831 11.8939 10.8976 12.5995 11.9993 12.5996C13.1742 12.5996 14.0216 11.7971 14.1028 10.918C14.1483 10.4232 14.5866 10.0584 15.0813 10.1035Z",
  fill: "currentColor"
}), /*#__PURE__*/React.createElement("path", {
  d: "M11.9993 1.09961C14.7282 1.09961 17.002 3.1917 17.2288 5.91113L17.3333 7.17773C17.3947 7.18409 17.4557 7.18982 17.5149 7.19727C18.3301 7.29982 19.0434 7.52076 19.6536 8.03809L19.8694 8.23926C20.3451 8.72392 20.6307 9.32209 20.842 10.0137C21.0766 10.7813 21.2473 11.7641 21.4592 12.9658L21.8254 15.0371L22.0325 16.2275C22.2255 17.3587 22.367 18.3143 22.3948 19.1123C22.4327 20.2 22.269 21.162 21.6086 21.9609C20.9463 22.7622 20.0339 23.0976 18.9641 23.252C17.9205 23.4024 16.5684 23.4004 14.8977 23.4004H9.10279C7.43213 23.4004 6.08002 23.4023 5.03638 23.252C3.96647 23.0977 3.05429 22.7621 2.39185 21.9609C1.73131 21.1619 1.5678 20.2001 1.60572 19.1123C1.64281 18.0482 1.8821 16.7041 2.17603 15.0371L2.69361 12.1055C2.84226 11.2862 2.98247 10.5894 3.15845 10.0137C3.4001 9.22316 3.73798 8.55448 4.34693 8.03809L4.5813 7.85742C5.1375 7.46749 5.77241 7.28694 6.4856 7.19727C6.54405 7.18992 6.60368 7.18401 6.66431 7.17773L6.76978 5.91113L6.79712 5.6582C7.13914 3.06314 9.35569 1.09973 11.9993 1.09961ZM9.46802 8.90039C8.21729 8.90039 7.36182 8.90155 6.71021 8.9834C6.16282 9.05222 5.84282 9.16999 5.60767 9.33691L5.51099 9.41113C5.26546 9.61941 5.06792 9.92569 4.88013 10.54C4.73397 11.0182 4.61169 11.6182 4.46704 12.4141L4.31372 13.2783L3.94849 15.3496C3.64511 17.0702 3.43622 18.2669 3.40454 19.1748C3.37372 20.059 3.52041 20.501 3.77954 20.8145C4.03681 21.1253 4.43486 21.346 5.29322 21.4697C6.17837 21.5973 7.37618 21.5996 9.10279 21.5996H14.8977C16.6243 21.5996 17.8221 21.5973 18.7073 21.4697C19.5655 21.3459 19.9637 21.1254 20.221 20.8145C20.48 20.501 20.6268 20.0588 20.596 19.1748C20.5722 18.494 20.4491 17.6507 20.261 16.5459L20.052 15.3496L19.6868 13.2783C19.467 12.0319 19.3152 11.1777 19.1204 10.54C18.9561 10.0025 18.7841 9.70063 18.5793 9.49414L18.4895 9.41113C18.2451 9.20393 17.9158 9.06209 17.2903 8.9834C16.6387 8.9015 15.7832 8.90039 14.5325 8.90039H9.46802ZM11.9993 2.90039C10.2626 2.90051 8.80701 4.18976 8.58228 5.89453L8.56372 6.06055L8.47681 7.10156C8.78925 7.09936 9.11983 7.09961 9.46802 7.09961H14.5325C14.8798 7.09961 15.209 7.09937 15.5208 7.10156L15.4348 6.06055C15.2857 4.27406 13.792 2.90039 11.9993 2.90039Z",
  fill: "currentColor",
  fillRule: "evenodd",
  clipRule: "evenodd"
})));
export default ShoppingBag02Icon;