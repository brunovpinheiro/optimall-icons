function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import React, { forwardRef } from 'react';
export const ChampionIcon = /*#__PURE__*/forwardRef(({
  className,
  style,
  ariaLabel,
  ...props
}, ref) => /*#__PURE__*/React.createElement("svg", _extends({
  ref: ref,
  className: className,
  "aria-label": ariaLabel || "champion",
  style: style,
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, props), /*#__PURE__*/React.createElement("path", {
  d: "M14.8131 1.09962C15.6866 1.09962 16.4513 1.09713 17.0622 1.1963C17.719 1.30304 18.3175 1.54479 18.7809 2.10645L18.9342 2.31153C19.2616 2.79779 19.3785 3.33221 19.3971 3.90235C19.3992 3.96666 19.3984 4.03243 19.3981 4.09962H19.7028C20.2758 4.09962 20.8006 4.09754 21.2165 4.15528C21.6521 4.21583 22.1448 4.36358 22.5094 4.80274L22.6344 4.97266C22.8906 5.3758 22.9215 5.81795 22.8913 6.20313C22.8751 6.40929 22.8376 6.63778 22.7887 6.88184L22.6169 7.65528L22.2262 9.3545C21.5783 12.1724 19.2845 14.2704 16.487 14.8262C15.9425 15.6853 15.3097 16.4276 14.5944 16.9678C15.5229 17.6408 16.2547 18.6491 16.7165 19.7949L16.8053 20.0547C16.9771 20.6641 16.9047 21.2855 16.6657 21.7871C16.4031 22.338 15.8442 22.9004 15.0407 22.9004H8.95865C8.15518 22.9003 7.59618 22.3379 7.33365 21.7871C7.06052 21.2139 7.00508 20.4843 7.28287 19.7949L7.44889 19.4121C7.91178 18.4251 8.58183 17.5648 9.40592 16.9678C8.69066 16.4277 8.05684 15.6862 7.51236 14.8272C4.80648 14.2892 2.57177 12.3076 1.84244 9.62794L1.77408 9.3545L1.38346 7.65528C1.25978 7.11748 1.1415 6.61571 1.10904 6.20313C1.07445 5.76292 1.12079 5.24868 1.49088 4.80274L1.63248 4.65137C1.97699 4.32801 2.40267 4.2083 2.78385 4.15528C3.1996 4.09755 3.72461 4.09961 4.29752 4.09962H4.60025C4.59998 4.03209 4.60009 3.96599 4.60221 3.90137C4.62359 3.25016 4.7734 2.64611 5.21842 2.10645L5.39811 1.91016C5.83196 1.48615 6.36242 1.28976 6.93717 1.1963C7.54798 1.09707 8.31272 1.09961 9.18619 1.09962H14.8131ZM11.9997 17.9004C10.8946 17.9005 9.77151 18.6961 9.08365 20.165L8.95182 20.4678C8.87062 20.6695 8.89279 20.8744 8.95865 21.0127C8.98064 21.0588 9.00104 21.0848 9.01432 21.0996H14.985C14.9983 21.0848 15.0187 21.0589 15.0407 21.0127C15.0984 20.8916 15.1224 20.7194 15.0729 20.543L15.0475 20.4678C14.3778 18.8059 13.1784 17.9004 11.9997 17.9004ZM9.18619 2.9004C8.2515 2.9004 7.65864 2.90321 7.22526 2.97364C6.93513 3.02088 6.78674 3.08798 6.6901 3.16797L6.60709 3.25196C6.49252 3.39097 6.41496 3.56547 6.40201 3.96094C6.38767 4.39955 6.45406 4.97744 6.56315 5.88282L6.63834 6.45801C7.0374 9.303 7.80301 11.72 8.77213 13.4316C9.83128 15.3021 10.9876 16.0994 11.9997 16.0996C13.0118 16.0996 14.1679 15.3022 15.2272 13.4316C16.261 11.6059 17.0634 8.9772 17.4362 5.88282L17.5094 5.2627C17.5737 4.69741 17.6081 4.29 17.5973 3.96094C17.5876 3.66406 17.5423 3.49143 17.4713 3.36524L17.3922 3.25196C17.2957 3.13498 17.161 3.03657 16.7741 2.97364C16.3407 2.90327 15.7478 2.9004 14.8131 2.9004H9.18619ZM4.29752 5.9004C3.67012 5.9004 3.29371 5.90196 3.03092 5.93848C2.97244 5.94663 2.92984 5.9554 2.90006 5.9629C2.89992 5.98739 2.90069 6.01974 2.90397 6.06153C2.92346 6.3095 3.00065 6.65744 3.13736 7.25196L3.52799 8.95118L3.57877 9.15333C3.98021 10.6283 5.00459 11.838 6.35123 12.5332C5.67191 10.8588 5.15919 8.87361 4.85514 6.70411L4.77604 6.09864C4.76799 6.03189 4.76046 5.96577 4.7526 5.9004H4.29752ZM19.2233 6.09864C18.9335 8.50367 18.3908 10.7026 17.6491 12.5313C19.0564 11.8043 20.1123 10.517 20.4723 8.95118L20.8629 7.25196L21.0241 6.52735C21.063 6.33499 21.0866 6.18559 21.0963 6.06153C21.0996 6.01973 21.0994 5.9874 21.0993 5.9629C21.0695 5.95544 21.0274 5.94656 20.9694 5.93848C20.7066 5.90195 20.3304 5.9004 19.7028 5.9004H19.2467L19.2233 6.09864Z",
  fill: "currentColor",
  fillRule: "evenodd",
  clipRule: "evenodd"
})));
export default ChampionIcon;