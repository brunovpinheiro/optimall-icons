function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import React, { forwardRef } from 'react';
export const NumberListIcon = /*#__PURE__*/forwardRef(({
  className,
  style,
  ariaLabel,
  ...props
}, ref) => /*#__PURE__*/React.createElement("svg", _extends({
  ref: ref,
  className: className,
  "aria-label": ariaLabel || "number, list",
  style: style,
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, props), /*#__PURE__*/React.createElement("path", {
  d: "M4.50007 14.0996C4.7356 14.0996 4.98511 14.0958 5.21004 14.1406L5.36336 14.1768C6.12216 14.3877 6.704 15.0092 6.85945 15.79L6.88484 15.9629C6.90248 16.1389 6.90047 16.3233 6.90047 16.5C6.90047 16.6767 6.90248 16.8611 6.88484 17.0371L6.85945 17.21C6.70399 17.9908 6.12216 18.6123 5.36336 18.8232L5.21004 18.8594C4.98511 18.9042 4.7356 18.9004 4.50007 18.9004C4.35496 18.9004 4.26832 18.9001 4.2032 18.9023C4.14211 18.9044 4.13197 18.9072 4.14168 18.9053C4.02297 18.9289 3.93001 19.0226 3.90632 19.1416C3.90832 19.1316 3.90453 19.1414 3.90242 19.2031C3.9002 19.2683 3.90047 19.3549 3.90047 19.5V20.0996H6.00007L6.09187 20.1045C6.54582 20.1505 6.90047 20.5339 6.90047 21C6.90046 21.4661 6.54581 21.8495 6.09187 21.8955L6.00007 21.9004H3.59968C3.4837 21.9004 3.30585 21.9018 3.15047 21.8809C2.96893 21.8564 2.68996 21.7875 2.45125 21.5488L2.45222 21.5479C2.21316 21.3088 2.14359 21.0299 2.11922 20.8486C2.09838 20.6933 2.09968 20.5163 2.09968 20.4004V19.5C2.09968 19.2644 2.09598 19.0148 2.1407 18.79L2.17683 18.6367C2.38777 17.8782 3.00905 17.2961 3.79011 17.1406L3.96297 17.1152C4.13897 17.0976 4.32349 17.0996 4.50007 17.0996C4.64517 17.0996 4.73183 17.0999 4.79695 17.0977C4.85848 17.0955 4.86843 17.0927 4.85847 17.0947L4.94246 17.0645C5.01987 17.0228 5.07604 16.9477 5.09382 16.8584L5.09773 16.7969C5.09995 16.7317 5.09968 16.6452 5.09968 16.5C5.09968 16.3548 5.09995 16.2683 5.09773 16.2031C5.09562 16.1414 5.09282 16.1316 5.0948 16.1416C5.0711 16.0225 4.97724 15.9299 4.85847 15.9062C4.86843 15.9082 4.85848 15.9045 4.79695 15.9023C4.73183 15.9001 4.64517 15.9004 4.50007 15.9004H3.00007C2.50309 15.9003 2.09969 15.497 2.09968 15C2.09968 14.503 2.50309 14.0997 3.00007 14.0996H4.50007Z",
  fill: "currentColor"
}), /*#__PURE__*/React.createElement("path", {
  d: "M21.0919 17.1045C21.5458 17.1505 21.9005 17.5339 21.9005 18C21.9005 18.4661 21.5458 18.8495 21.0919 18.8955L21.0001 18.9004H11.0001C10.5031 18.9004 10.0997 18.497 10.0997 18C10.0997 17.503 10.5031 17.0996 11.0001 17.0996H21.0001L21.0919 17.1045Z",
  fill: "currentColor"
}), /*#__PURE__*/React.createElement("path", {
  d: "M21.0919 11.1045C21.5458 11.1505 21.9005 11.5339 21.9005 12C21.9005 12.4661 21.5458 12.8495 21.0919 12.8955L21.0001 12.9004H11.0001C10.5031 12.9004 10.0997 12.497 10.0997 12C10.0997 11.503 10.5031 11.0996 11.0001 11.0996H21.0001L21.0919 11.1045Z",
  fill: "currentColor"
}), /*#__PURE__*/React.createElement("path", {
  d: "M4.32234 2.10645C4.92758 2.16771 5.40037 2.67843 5.40047 3.2998V8.09961H6.00007L6.09187 8.10449C6.54582 8.15047 6.90047 8.53393 6.90047 9C6.90047 9.46607 6.54582 9.84953 6.09187 9.89551L6.00007 9.90039H3.00007C2.50305 9.90035 2.09968 9.49703 2.09968 9C2.09968 8.50297 2.50305 8.09965 3.00007 8.09961H3.59968V3.90039H3.00007C2.50305 3.90035 2.09968 3.49703 2.09968 3C2.09968 2.50297 2.50305 2.09965 3.00007 2.09961H4.20027L4.32234 2.10645Z",
  fill: "currentColor"
}), /*#__PURE__*/React.createElement("path", {
  d: "M21.0919 5.10449C21.5458 5.15047 21.9005 5.53393 21.9005 6C21.9005 6.46607 21.5458 6.84953 21.0919 6.89551L21.0001 6.90039H11.0001C10.5031 6.90035 10.0997 6.49703 10.0997 6C10.0997 5.50297 10.5031 5.09965 11.0001 5.09961H21.0001L21.0919 5.10449Z",
  fill: "currentColor"
})));
export default NumberListIcon;